parameters:
    sopinet.comments.vote_persistence_listener.class: Sopinet\TimelineBundle\Listener\CommentVotePersistenceListener
    #webservice_user_provider.class: Trazeo\BaseBundle\Security\User\WebserviceUserProvider
#    trazeo_base.example.class: Trazeo\BaseBundle\Example

services:
#    trazeo_base.example:
#        class: %trazeo_base.example.class%
#        arguments: [@service_id, "plain_value", %parameter%]
    #webservice_user_provider:
     #   class: "%webservice_user_provider.class%"
    sopinet.comments.vote_persistence_listener:
        class: %sopinet.comments.vote_persistence_listener.class%
        arguments: [ @fos_comment.manager.vote.default, @security.context ]
        tags:
            - { name: kernel.event_subscriber }
    
    Trazeo.login_success_handler:
        class:  Trazeo\BaseBundle\Authentication\CheckUser
        arguments:  ['@service_container', '@router']
        tags:
            - { name: 'monolog.logger', channel: 'security' }  

    trazeo_base.admin.e_child:
        class: Trazeo\BaseBundle\Admin\EChildAdmin
        arguments: [~, Trazeo\BaseBundle\Entity\EChild, SonataAdminBundle:CRUD]
        tags:
            - {name: sonata.admin, manager_type: orm, group: admin, label: EChild}

    trazeo_base.admin.e_child_ride:
        class: Trazeo\BaseBundle\Admin\EChildRideAdmin
        arguments: [~, Trazeo\BaseBundle\Entity\EChildRide, SonataAdminBundle:CRUD]
        tags:
            - {name: sonata.admin, manager_type: orm, group: admin, label: EChildRide}

    trazeo_base.admin.e_child_invite:
        class: Trazeo\BaseBundle\Admin\EChildInviteAdmin
        arguments: [~, Trazeo\BaseBundle\Entity\EChildInvite, SonataAdminBundle:CRUD]
        tags:
            - {name: sonata.admin, manager_type: orm, group: admin, label: EChildInvite}

    trazeo_base.admin.e_event:
        class: Trazeo\BaseBundle\Admin\EEventAdmin
        arguments: [~, Trazeo\BaseBundle\Entity\EEvent, SonataAdminBundle:CRUD]
        tags:
            - {name: sonata.admin, manager_type: orm, group: admin, label: EEvent}

    trazeo_base.admin.e_group:
        class: Trazeo\BaseBundle\Admin\EGroupAdmin
        arguments: [~, Trazeo\BaseBundle\Entity\EGroup, SonataAdminBundle:CRUD]
        tags:
            - {name: sonata.admin, manager_type: orm, group: admin, label: EGroup}

    trazeo_base.admin.e_group_access:
        class: Trazeo\BaseBundle\Admin\EGroupAccessAdmin
        arguments: [~, Trazeo\BaseBundle\Entity\EGroupAccess, SonataAdminBundle:CRUD]
        tags:
            - {name: sonata.admin, manager_type: orm, group: admin, label: EGroupAccess}

    trazeo_base.admin.e_group_anon_invite:
        class: Trazeo\BaseBundle\Admin\EGroupAnonInviteAdmin
        arguments: [~, Trazeo\BaseBundle\Entity\EGroupAnonInvite, SonataAdminBundle:CRUD]
        tags:
            - {name: sonata.admin, manager_type: orm, group: admin, label: EGroupAnonInvite}

    trazeo_base.admin.e_group_invite:
        class: Trazeo\BaseBundle\Admin\EGroupInviteAdmin
        arguments: [~, Trazeo\BaseBundle\Entity\EGroupInvite, SonataAdminBundle:CRUD]
        tags:
            - {name: sonata.admin, manager_type: orm, group: admin, label: EGroupInvite}

    trazeo_base.admin.e_points:
        class: Trazeo\BaseBundle\Admin\EPointsAdmin
        arguments: [~, Trazeo\BaseBundle\Entity\EPoints, SonataAdminBundle:CRUD]
        tags:
            - {name: sonata.admin, manager_type: orm, group: admin, label: EPoints}

    trazeo_base.admin.e_report:
        class: Trazeo\BaseBundle\Admin\EReportAdmin
        arguments: [~, Trazeo\BaseBundle\Entity\EReport, SonataAdminBundle:CRUD]
        tags:
            - {name: sonata.admin, manager_type: orm, group: admin, label: EReport}

    trazeo_base.admin.e_ride:
        class: Trazeo\BaseBundle\Admin\ERideAdmin
        arguments: [~, Trazeo\BaseBundle\Entity\ERide, SonataAdminBundle:CRUD]
        tags:
            - {name: sonata.admin, manager_type: orm, group: admin, label: ERide}

    trazeo_base.admin.e_route:
        class: Trazeo\BaseBundle\Admin\ERouteAdmin
        arguments: [~, Trazeo\BaseBundle\Entity\ERoute, SonataAdminBundle:CRUD]
        tags:
            - {name: sonata.admin, manager_type: orm, group: admin, label: ERoute}

    trazeo_base.admin.e_sponsor:
        class: Trazeo\BaseBundle\Admin\ESponsorAdmin
        arguments: [~, Trazeo\BaseBundle\Entity\ESponsor, SonataAdminBundle:CRUD]
        tags:
            - {name: sonata.admin, manager_type: orm, group: admin, label: ESponsor}

    trazeo_base.admin.user_extend:
        class: Trazeo\BaseBundle\Admin\UserExtendAdmin
        arguments: [~, Trazeo\BaseBundle\Entity\UserExtend, SonataAdminBundle:CRUD]
        tags:
            - {name: sonata.admin, manager_type: orm, group: admin, label: UserExtend}

    trazeo_base.admin.e_suggestion:
        class: Trazeo\BaseBundle\Admin\ESuggestionAdmin
        arguments: [~, Trazeo\BaseBundle\Entity\ESuggestion, SonataAdminBundle:CRUD]
        tags:
            - {name: sonata.admin, manager_type: orm, group: admin, label: ESuggestion}

    trazeo_base.admin.e_useraction:
        class: Trazeo\BaseBundle\Admin\EUserActionAdmin
        arguments: [~, Sopinet\Bundle\GamificationBundle\Entity\EUserAction, SonataAdminBundle:CRUD]
        tags:
            - {name: sonata.admin, manager_type: orm, group: admin, label: EUserAction}

    trazeo_base_helper:
       class: Trazeo\BaseBundle\Service\Helper
       arguments: ["@service_container"]

    trazeo_base_distance_measurer:
       class: Trazeo\BaseBundle\Service\DistanceMeasurer
       arguments: ["@service_container"]  
    Trazeo_user.form.handler.registration:
        class: Trazeo\BaseBundle\Form\RegistrationFormType
        arguments: [%fos_user.model.user.class%]
        tags:
            - { name:form.type, alias:trazeo_user_registration }