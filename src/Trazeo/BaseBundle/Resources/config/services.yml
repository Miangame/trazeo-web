parameters:
    sopinet.comments.vote_persistence_listener.class: Sopinet\TimelineBundle\Listener\CommentVotePersistenceListener
    #webservice_user_provider.class: Trazeo\BaseBundle\Security\User\WebserviceUserProvider
#    trazeo_base.example.class: Trazeo\BaseBundle\Example

services:
    security.access.project_user:
        class:      Trazeo\BaseBundle\Voter\ProjectVoter
        arguments:  ["@request_stack"]
        public:     true
        tags:
           - { name: security.voter }
#    trazeo_base.example:
#        class: %trazeo_base.example.class%
#        arguments: [@service_id, "plain_value", %parameter%]
    #webservice_user_provider:
     #   class: "%webservice_user_provider.class%"
    sopinet.comments.vote_persistence_listener:
        class: %sopinet.comments.vote_persistence_listener.class%
        arguments: [ @fos_comment.manager.vote.default, @security.context ]
        tags:
            - { name: kernel.event_subscriber }
    
    Trazeo.login_success_handler:
        class:  Trazeo\BaseBundle\Authentication\CheckUser
        arguments:  ['@service_container', '@router']
        tags:
            - { name: 'monolog.logger', channel: 'security' }

    trazeo_base_helper:
       class: Trazeo\BaseBundle\Service\Helper
       arguments: ["@service_container"]

    trazeo_mailer_helper:
       class: Trazeo\BaseBundle\Service\MailerHelper
       arguments: ["@service_container"]

    trazeo_base_distance_measurer:
       class: Trazeo\BaseBundle\Service\DistanceMeasurer
       arguments: ["@service_container"]  

    trazeo_base_api_helper:
       class: Trazeo\BaseBundle\Service\ApiHelper
       arguments: ["@doctrine.orm.default_entity_manager","@fos_rest.view_handler"]

    Trazeo_user.form.handler.registration:
        class: Trazeo\BaseBundle\Form\RegistrationFormType
        arguments: [%fos_user.model.user.class%]
        tags:
            - { name:form.type, alias:trazeo_user_registration }
    kernel.listener.yourlisener:
        class: Trazeo\BaseBundle\Listener\ExceptionListener
        arguments: ['@service_container', '@session']
        tags:
            - { name: kernel.event_listener, event: kernel.exception, method: onKernelException }

    send_trazeo:
        class:  Trazeo\BaseBundle\Service\Consumer\SendConsumer
        arguments:  ['@service_container']
        calls:
            - [setRequest, [@request_stack]]

    form.type.datalist_type:
        class: Trazeo\BaseBundle\Form\Type\DatalistType
        tags:
            -  { name: form.type, alias: datalist }
